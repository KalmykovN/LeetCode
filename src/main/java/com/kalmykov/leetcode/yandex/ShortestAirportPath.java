package com.kalmykov.leetcode.yandex;

/**
Дан набор пар городов:
- между каждой парой городов сотрудник совершил прямой перелёт;
- информация, в каком направлении был совершён перелёт, утеряна.

Известно, что все указанные перелёты относятся к одному путешествию.
Каждый следующий перелёт сотрудник начинал из того города, в котором закончил предыдущий.
Никакой город не был посещён сотрудником дважды.
Город начала путешествия также отличается от конечной точки.
Выведите города в порядке следования по маршруту.

Примеры:
[("Moscow", "Belgrade")] -> ["Moscow", "Belgrade"]
[("Moscow", "Belgrade"), ("Moscow", "Erevan")] -> ["Erevan", "Moscow", "Belgrade"]
 [(M, B), (M, E), (E, S)] => B->M->E->S
 */
public class ShortestAirportPath {
    /**
     * Решение задачи можно реализовать с помощью графа, где города будут вершинами,а перпелёты - ребрами.
     * Алгоритм будет заключаться в следующем:
     * 1. Создать граф из пар городов. (Будем использовать adjacent list для представления графа)
     * 2.
     * */
}
